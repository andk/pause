% layout 'layout';
% my $pause = stash(".pause") || {};

<p>Query the <code>perms</code> table by author or by
distribution. Select the option and fill in a distribution name or
user ID as appropriate. The answer is all distributions that an
user ID is registered for or all user IDs registered for a
distribution, as appropriate.</p>

<p>Registration comes in one of two types: type
<b>first-come</b> is the automatic registration on a
first-come-first-serve basis that happens on the initial
upload. And type <b>co-maint</b> is the registration as
co-maintainer which means that the primary maintainer of
the namespace has granted permission to upload this module
to other userid(s). Per namespace there can only be one
primary maintainer (userid in the
<b>first-come</b> category) and any number of userids in
the <b>co-maint</b> category. Being registered in any of
the categories means that a user is able not only to
upload a module in that namespace but also be accepted by
the indexer. In other words, the indexer will not ignore
uploads for that namespace by that person.</p>

<p class="notice">Permission is granted per namespace,
not per distribution. So you might not have enough
permission to upload a distribution or grant permissions to
other people if you are listed here (when you have permissions for
only a part of the distribution). If you want more detailed
information, visit <a href="<%= my_url->query(ACTION => 'peek_perms') %>">
View permission per module</a> page.</p>

<p>The
contents of the tables presented on this page are mostly
generated automatically, so please report any errors you
observe to <%= "@{$PAUSE::Config->{ADMINS}}" %> so that the tables
can be corrected.--Thank you!</p><p>

<%= select_field 'pause99_peek_dist_perms_by' => [
  ["for a distribution--exact match" => "de"],
  [qq{for a distribution--SQL "LIKE" match} => "dl"],
  ["of an author" => "a"],
], size => 1 =%>

<%= text_field 'pause99_peek_dist_perms_query', size => 44, maxlength => 112, =%>

<input type="submit" name="pause99_peek_dist_perms_sub" value="Submit">

</p>
% if (@{$pause->{rows} || []}) {
<div id="perms">
<input class="search" placeholder="Filter">
<ul class="pagination paginationTop"></ul>
<table class="table compact">
  <thead>
    <tr>
%   for (@{$pause->{column_names}}) {
      <th class="sort" data-sort="<%= $_ %>"><%= $_ %></th>
%   }
    </tr>
  </thead>
  <tbody class="list">
%   for my $row (@{$pause->{rows}}) {
    <tr>
      <td class="dist"><a href="<%= my_url->query([
        pause99_peek_dist_perms_by => "de",
        pause99_peek_dist_perms_query => $row->[0],
        pause99_peek_dist_perms_sub => 1,
      ]) %>"><%= $row->[0] %></a></td>
      <td class="owner">
%     my @owners = split /,/, $row->[1] // '';
%     while(my $owner = shift @owners) {
        <a href="<%= my_url->query([
          pause99_peek_dist_perms_by => "a",
          pause99_peek_dist_perms_query => $owner,
          pause99_peek_dist_perms_sub => 1,
        ]) %>"><%= $owner %></a><% if (@owners) { %>,<% } %>
%     }
      </td>
      <td class="comaint">
%     my @comaints = split /,/, $row->[2] // '';
%     while(my $comaint = shift @comaints) {
        <a href="<%= my_url->query([
          pause99_peek_dist_perms_by => "a",
          pause99_peek_dist_perms_query => $comaint,
          pause99_peek_dist_perms_sub => 1,
        ]) %>"><%= $comaint %></a><% if (@comaints) { %>,<% } %>
%     }
      </td>
    </tr>
% }
  </tbody>
</table>
<ul class="pagination paginationBottom"></ul>
<p><a href="<%= my_url->query([
  OF => "YAML",
  pause99_peek_dist_perms_sub => 1,
  pause99_peek_dist_perms_by => param("pause99_peek_dist_perms_by"),
  pause_peek_dist_perms_query => param("pause99_peek_dist_perms_query")],
) %>" style="text-decoration: none;">
<span class="orange_button">YAML</span>
</a></p>
</div>
% content_for javascript => begin
%= javascript "/list.min.js"
%= javascript begin
var List = new List('perms', {
  valueNames: ['dist', 'owner', 'comaint'],
  page: 300,
  pagination: [
    {name: 'paginationTop', paginationClass: 'paginationTop', innerWindow: 5, outerWindow: 1},
    {name: 'paginationBottom', paginationClass: 'paginationBottom', innerWindow: 5, outerWindow: 1}
  ]
});
% end
% end

% } else {
No records found.
% }
