#!/usr/bin/perl
use v5.36.0;

use Carp qw(croak);
use Getopt::Long::Descriptive;
use Path::Tiny;

chdir("/home/pause/pause") or die "can't chdir to ~pause/pause: $!";

# install plenv so we can manage a local perl version
run_cmd(qw(
  git clone https://github.com/tokuhirom/plenv.git /home/pause/.plenv
));

path("/home/pause/.bash_profile")->append(<<~'END');
  export PATH="$HOME/.plenv/bin:$PATH"
  eval "$(plenv init -)"
  END

# install perl-build so we can build a new perl
run_cmd(qw(
  git clone https://github.com/tokuhirom/Perl-Build.git
    /home/pause/.plenv/plugins/perl-build/
));

run_cmd(qw( /home/pause/.plenv/bin/plenv install 5.36.0 -j 8 ));
run_cmd(qw( /home/pause/.plenv/bin/plenv global  5.36.0 ));

# install cpanm for perl dep management
run_cmd(qw( /home/pause/.plenv/bin/plenv install-cpanm ));

# We need to pin these for now
run_cmd(qw( /home/pause/.plenv/shims/cpanm -n Mojolicious@8.72 ));
run_cmd(qw( /home/pause/.plenv/shims/cpanm -n DBD::mysql@4.052 ));

run_cmd(qw( /home/pause/.plenv/shims/cpanm -n --installdeps . ));

# Set up pause config
for my $path (qw(
  /home/pause/incoming
  /home/pause/log
  /home/pause/pause-private/lib
  /home/pause/pid
  /home/pause/pub/PAUSE/authors/id
  /home/pause/pub/PAUSE/modules
  /home/pause/pub/PAUSE/PAUSE-git
  /home/pause/run
  /tmp/pause_1999
)) {
  path($path)->mkdir;
}

run_cmd(qw(git init));
run_cmd(qw(git config --global user.email pause@pause.perl.org));
run_cmd(qw(git config --global user.name), 'PAUSE Daemon');

path("/home/pause/pause-private/lib/PrivatePAUSE.pm")->spew(<<~'END');
  use strict;
  package PAUSE;

  $ENV{EMAIL_SENDER_TRANSPORT} = 'DevNull';

  our $Config;
  $Config->{AUTHEN_DATA_SOURCE_USER}  = "pause";
  $Config->{AUTHEN_DATA_SOURCE_PW}    = "pausepassword";
  $Config->{MOD_DATA_SOURCE_USER}     = "pause";
  $Config->{MOD_DATA_SOURCE_PW}       = "pausepassword";
  $Config->{MAIL_MAILER}              = ["testfile"];
  $Config->{RUNDATA}                  = "/tmp/pause_1999";

  $Config->{CHECKSUMS_SIGNING_PROGRAM} = "does-not-exist";
  $Config->{FTPPUB} = '/home/pause/pub/PAUSE/';
  $Config->{GITROOT} = '/home/pause/pub/PAUSE/PAUSE-git';
  $Config->{INCOMING_LOC} = '/home/pause/incoming'
  $Config->{MLROOT} = '/home/pause/pub/PAUSE/authors/id/';
  $Config->{ML_CHOWN_USER}  = 'unsafe';
  $Config->{ML_CHOWN_GROUP} = 'unsafe';
  $Config->{ML_MIN_FILES} = 1;
  $Config->{ML_MIN_INDEX_LINES} = 0;
  $Config->{PAUSE_LOG} = "/home/pause/log/paused.log";
  $Config->{PAUSE_LOG_DIR} = "/home/pause/log/";
  $Config->{PID_DIR} = "/home/pause/pid/";
  $Config->{TMP} = "/tmp/";
  END

sub run_cmd (@args) {
  system {$args[0]} @args;

  croak "failed to run $args[0]" if $?;
}
